# agente_redator_contratos.py - Agente Especializado em Contratos

import json
import logging
import asyncio
import openai
import os
from typing import Dict, Any
import re
from datetime import datetime

class AgenteRedatorContratos:
    """
    Agente Redator Otimizado e Especializado na reda√ß√£o de Contratos.
    """
    def __init__(self, api_key: str):
        if not api_key: raise ValueError("DEEPSEEK_API_KEY n√£o configurada")
        self.client = openai.OpenAI(api_key=api_key, base_url="https://api.deepseek.com/v1")
        print("‚úÖ Agente Redator de CONTRATOS inicializado.")

    async def gerar_documento_html_puro_async(self, dados_formulario: Dict, pesquisas: Dict) -> str:
        print("üìù Gerando Contrato completo...")
        
        prompt_completo = f"""
        Voc√™ √© um advogado especialista em direito contratual. Sua tarefa √© redigir um contrato completo, formal e juridicamente s√≥lido com base nos dados do formul√°rio e na pesquisa de modelos.

        ESTRUTURA OBRIGAT√ìRIA DO CONTRATO:
        1.  **T√çTULO:** Ex: "CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS".
        2.  **QUALIFICA√á√ÉO DAS PARTES:** Identifique o CONTRATANTE e o CONTRATADO.
        3.  **CL√ÅUSULA PRIMEIRA - DO OBJETO:** Descreva detalhadamente o objeto do contrato.
        4.  **CL√ÅUSULA SEGUNDA - DO VALOR E DA FORMA DE PAGAMENTO:** Especifique o valor e como ser√° pago.
        5.  **CL√ÅUSULA TERCEIRA - DOS PRAZOS:** Detalhe os prazos de in√≠cio, etapas e conclus√£o.
        6.  **CL√ÅUSULA QUARTA - DAS OBRIGA√á√ïES DAS PARTES:** Liste as responsabilidades do Contratante e do Contratado.
        7.  **CL√ÅUSULA QUINTA - DAS PENALIDADES:** Descreva as multas por atraso ou descumprimento.
        8.  **CL√ÅUSULA SEXTA - DA RESCIS√ÉO:** Condi√ß√µes para rescindir o contrato.
        9.  **CL√ÅUSULA S√âTIMA - DO FORO:** Especifique o foro de elei√ß√£o.
        10. **FECHO E ASSINATURAS:** Local, data e linhas para as assinaturas.

        DADOS DO FORMUL√ÅRIO:
        {json.dumps(dados_formulario, ensure_ascii=False, indent=2)}

        PESQUISA DE MODELOS E CL√ÅUSULAS (use como refer√™ncia e inspira√ß√£o):
        {pesquisas.get('pesquisa_formatada', 'Nenhuma pesquisa de refer√™ncia foi encontrada.')}

        REGRAS DE FORMATA√á√ÉO:
        - A resposta DEVE ser um bloco de c√≥digo HTML.
        - Use `<h1>` para o t√≠tulo do contrato, `<h2>` para a qualifica√ß√£o das partes, e `<h3>` para os t√≠tulos das cl√°usulas (CL√ÅUSULA PRIMEIRA, etc.).
        - Use `<p>` para o texto das cl√°usulas e `<strong>` para negrito.
        - N√ÉO use Markdown.
        """
        
        try:
            response = await asyncio.to_thread(
                self.client.chat.completions.create,
                model="deepseek-chat", messages=[{"role": "user", "content": prompt_completo}],
                max_tokens=8192, temperature=0.2
            )
            return re.sub(r'^```html|```$', '', response.choices[0].message.content.strip())
        except Exception as e:
            print(f"‚ùå ERRO na API ao gerar o contrato: {e}")
            return f"<h1>Erro na Gera√ß√£o do Contrato</h1><p>{e}</p>"

    def redigir_peticao_completa(self, dados_estruturados: Dict, pesquisa_juridica: Dict) -> Dict:
        try:
            return {"documento_html": asyncio.run(self.gerar_documento_html_puro_async(dados_estruturados, pesquisa_juridica))}
        except Exception as e:
            return {"status": "erro", "erro": str(e)}
