# agente_redator.py - Agente Redator para documentos de 30+ mil caracteres

import os
import json
import re
from typing import Dict, Any, List
from datetime import datetime

class AgenteRedator:
    """
    Agente Redator que gera documentos extensos (30+ mil caracteres) usando:
    - Dados reais do formul√°rio
    - Pesquisas jur√≠dicas formatadas
    - Templates especializados por √°rea
    - HTML profissional
    """
    
    def __init__(self):
        print("‚úçÔ∏è Inicializando Agente Redator para documentos EXTENSOS...")
        
        # Configura√ß√£o para documentos extensos
        self.tamanho_minimo = 30000
        self.openai_api_key = os.getenv('OPENAI_API_KEY')
        
        # Templates por √°rea do direito
        self.templates_especializados = {
            'trabalhista': self._get_template_trabalhista(),
            'civil': self._get_template_civil(),
            'consumidor': self._get_template_consumidor(),
            'default': self._get_template_default()
        }
        
        print("‚úÖ Agente Redator EXTENSO inicializado")
    
    def redigir_peticao_completa(self, dados_estruturados: Dict[str, Any], pesquisa_juridica: Dict[str, Any]) -> Dict[str, Any]:
        """
        Redige peti√ß√£o completa e extensa usando dados reais.
        """
        try:
            print("‚úçÔ∏è Iniciando reda√ß√£o de peti√ß√£o EXTENSA...")
            
            # ETAPA 1: PREPARAR DADOS
            dados_preparados = self._preparar_dados_para_redacao(dados_estruturados, pesquisa_juridica)
            print(f"üìä Dados preparados: {len(str(dados_preparados))} caracteres de entrada")
            
            # ETAPA 2: IDENTIFICAR TEMPLATE
            area_direito = dados_preparados.get('area_direito', 'default')
            template = self.templates_especializados.get(area_direito, self.templates_especializados['default'])
            print(f"üìã Template selecionado: {area_direito}")
            
            # ETAPA 3: GERAR DOCUMENTO EXTENSO
            documento_html = self._gerar_documento_extenso(dados_preparados, template)
            
            # ETAPA 4: GARANTIR TAMANHO M√çNIMO
            if len(documento_html) < self.tamanho_minimo:
                print(f"üìù Expandindo documento de {len(documento_html)} para {self.tamanho_minimo}+ caracteres...")
                documento_html = self._expandir_documento_para_30k(documento_html, dados_preparados)
            
            tamanho_final = len(documento_html)
            print(f"‚úÖ Peti√ß√£o redigida: {tamanho_final} caracteres")
            
            return {
                "status": "sucesso",
                "documento_html": documento_html,
                "estatisticas": {
                    "tamanho_caracteres": tamanho_final,
                    "area_direito": area_direito,
                    "dados_reais_utilizados": self._contar_dados_reais(dados_preparados),
                    "pesquisas_integradas": len(pesquisa_juridica.get('legislacao_formatada', '') + 
                                               pesquisa_juridica.get('jurisprudencia_formatada', '') + 
                                               pesquisa_juridica.get('doutrina_formatada', ''))
                },
                "timestamp": datetime.now().isoformat()
            }
            
        except Exception as e:
            print(f"‚ùå Erro na reda√ß√£o: {e}")
            return self._gerar_documento_fallback_extenso(dados_estruturados, pesquisa_juridica)
    
    def _preparar_dados_para_redacao(self, dados_estruturados: Dict[str, Any], pesquisa_juridica: Dict[str, Any]) -> Dict[str, Any]:
        """Prepara todos os dados para reda√ß√£o."""
        
        # Extrair dados do autor
        autor = dados_estruturados.get('autor', {})
        reu = dados_estruturados.get('reu', {})
        
        # Preparar dados consolidados
        dados_preparados = {
            'area_direito': pesquisa_juridica.get('area_direito', 'civil'),
            'autor': {
                'nome': autor.get('nome', '[NOME DO AUTOR A SER PREENCHIDO]'),
                'qualificacao': autor.get('qualificacao', '[QUALIFICA√á√ÉO A SER PREENCHIDA]'),
                'cpf': autor.get('cpf', '[CPF A SER PREENCHIDO]'),
                'endereco': autor.get('endereco', '[ENDERE√áO A SER PREENCHIDO]')
            },
            'reu': {
                'nome': reu.get('nome', '[NOME DO R√âU A SER PREENCHIDO]'),
                'qualificacao': reu.get('qualificacao', '[QUALIFICA√á√ÉO A SER PREENCHIDA]'),
                'cnpj': reu.get('cnpj', '[CNPJ A SER PREENCHIDO]'),
                'endereco': reu.get('endereco', '[ENDERE√áO A SER PREENCHIDO]')
            },
            'fatos': dados_estruturados.get('fatos', '[FATOS A SEREM DETALHADOS]'),
            'pedidos': dados_estruturados.get('pedidos', '[PEDIDOS A SEREM ESPECIFICADOS]'),
            'valor_causa': dados_estruturados.get('valor_causa', '[VALOR A SER ARBITRADO]'),
            'tipo_acao': dados_estruturados.get('tipo_acao', 'A√ß√£o C√≠vel'),
            'documentos': dados_estruturados.get('documentos', '[DOCUMENTOS A SEREM RELACIONADOS]'),
            'legislacao': pesquisa_juridica.get('legislacao_formatada', ''),
            'jurisprudencia': pesquisa_juridica.get('jurisprudencia_formatada', ''),
            'doutrina': pesquisa_juridica.get('doutrina_formatada', ''),
            'resumo_pesquisa': pesquisa_juridica.get('resumo_executivo', '')
        }
        
        return dados_preparados
    
    def _gerar_documento_extenso(self, dados: Dict[str, Any], template: str) -> str:
        """Gera documento extenso usando template especializado."""
        
        # Substituir placeholders no template
        documento = template
        
        # Substitui√ß√µes b√°sicas
        substituicoes = {
            '{NOME_AUTOR}': dados['autor']['nome'],
            '{QUALIFICACAO_AUTOR}': dados['autor']['qualificacao'],
            '{CPF_AUTOR}': dados['autor']['cpf'],
            '{ENDERECO_AUTOR}': dados['autor']['endereco'],
            '{NOME_REU}': dados['reu']['nome'],
            '{QUALIFICACAO_REU}': dados['reu']['qualificacao'],
            '{CNPJ_REU}': dados['reu']['cnpj'],
            '{ENDERECO_REU}': dados['reu']['endereco'],
            '{TIPO_ACAO}': dados['tipo_acao'],
            '{FATOS_DETALHADOS}': self._expandir_fatos(dados['fatos']),
            '{LEGISLACAO_APLICAVEL}': dados['legislacao'],
            '{JURISPRUDENCIA_APLICAVEL}': dados['jurisprudencia'],
            '{DOUTRINA_APLICAVEL}': dados['doutrina'],
            '{PEDIDOS_DETALHADOS}': self._expandir_pedidos(dados['pedidos']),
            '{VALOR_CAUSA}': dados['valor_causa'],
            '{DOCUMENTOS_ANEXOS}': dados['documentos'],
            '{DATA_ATUAL}': datetime.now().strftime('%d de %B de %Y'),
            '{RESUMO_PESQUISA}': dados['resumo_pesquisa']
        }
        
        for placeholder, valor in substituicoes.items():
            documento = documento.replace(placeholder, str(valor))
        
        return documento
    
    def _expandir_fatos(self, fatos_originais: str) -> str:
        """Expande se√ß√£o de fatos para ser mais detalhada."""
        
        if not fatos_originais or fatos_originais.startswith('['):
            return """
            <p>Os fatos que ensejam a presente a√ß√£o s√£o de conhecimento da parte autora e ser√£o devidamente comprovados no curso do processo atrav√©s da documenta√ß√£o anexa e demais meios de prova admitidos em direito.</p>
            
            <p>A situa√ß√£o f√°tica apresentada demonstra de forma inequ√≠voca a necessidade de interven√ß√£o do Poder Judici√°rio para a prote√ß√£o dos direitos leg√≠timos da parte requerente, conforme ser√° detalhadamente exposto a seguir.</p>
            
            <p>Os acontecimentos que motivam a presente demanda encontram-se devidamente documentados e ser√£o objeto de an√°lise pormenorizada durante a instru√ß√£o processual, oportunidade em que restar√° demonstrada a veracidade de todas as alega√ß√µes apresentadas.</p>
            """
        
        # Expandir fatos reais
        fatos_expandidos = f"""
        <p>{fatos_originais}</p>
        
        <p>Os fatos narrados encontram respaldo na documenta√ß√£o anexa aos autos, constituindo prova robusta da veracidade das alega√ß√µes apresentadas pela parte autora.</p>
        
        <p>A situa√ß√£o descrita caracteriza de forma inequ√≠voca a necessidade de tutela jurisdicional para a prote√ß√£o dos direitos violados ou amea√ßados, conforme ser√° demonstrado atrav√©s da fundamenta√ß√£o jur√≠dica a seguir apresentada.</p>
        
        <p>Todos os elementos f√°ticos apresentados s√£o pass√≠veis de comprova√ß√£o atrav√©s dos meios de prova admitidos em direito, garantindo-se a demonstra√ß√£o cabal da proced√™ncia da pretens√£o deduzida.</p>
        
        <p>A cronologia dos acontecimentos evidencia a evolu√ß√£o da situa√ß√£o jur√≠dica que culminou na necessidade de ajuizamento da presente a√ß√£o, demonstrando a legitimidade e urg√™ncia da tutela jurisdicional pleiteada.</p>
        """
        
        return fatos_expandidos
    
    def _expandir_pedidos(self, pedidos_originais: str) -> str:
        """Expande se√ß√£o de pedidos para ser mais detalhada."""
        
        if not pedidos_originais or pedidos_originais.startswith('['):
            return """
            <p>Diante do exposto, requer-se a Vossa Excel√™ncia que, ap√≥s regular processamento da presente a√ß√£o, com observ√¢ncia do contradit√≥rio e da ampla defesa, seja julgada PROCEDENTE a pretens√£o deduzida.</p>
            
            <p>Requer-se, ainda, a condena√ß√£o da parte requerida ao pagamento das custas processuais e honor√°rios advocat√≠cios, nos termos da legisla√ß√£o aplic√°vel.</p>
            
            <p>Protesta-se pela produ√ß√£o de todos os meios de prova admitidos em direito, especialmente prova documental, testemunhal e pericial, se necess√°ria.</p>
            """
        
        # Expandir pedidos reais
        pedidos_expandidos = f"""
        <p>Diante de todo o exposto e com fundamento na legisla√ß√£o e jurisprud√™ncia citadas, requer-se a Vossa Excel√™ncia:</p>
        
        <p><strong>a)</strong> {pedidos_originais}</p>
        
        <p><strong>b)</strong> A condena√ß√£o da parte requerida ao pagamento das custas processuais e honor√°rios advocat√≠cios, nos termos do artigo 85 do C√≥digo de Processo Civil;</p>
        
        <p><strong>c)</strong> A aplica√ß√£o de todos os benef√≠cios legais cab√≠veis √† esp√©cie, incluindo a corre√ß√£o monet√°ria e juros de mora desde a data do evento danoso;</p>
        
        <p><strong>d)</strong> Caso necess√°rio, a designa√ß√£o de audi√™ncia de concilia√ß√£o, nos termos do artigo 334 do C√≥digo de Processo Civil;</p>
        
        <p><strong>e)</strong> A produ√ß√£o de todos os meios de prova admitidos em direito, especialmente prova documental, testemunhal e pericial, se necess√°ria para o deslinde da quest√£o;</p>
        
        <p><strong>f)</strong> Todas as demais medidas que se fizerem necess√°rias ao integral cumprimento da decis√£o judicial.</p>
        """
        
        return pedidos_expandidos
    
    def _expandir_documento_para_30k(self, documento: str, dados: Dict[str, Any]) -> str:
        """Expande documento para atingir 30+ mil caracteres."""
        
        # Se√ß√µes adicionais para expans√£o
        secoes_expansao = []
        
        # Se√ß√£o de fundamenta√ß√£o constitucional
        secoes_expansao.append("""
        <h2>DA FUNDAMENTA√á√ÉO CONSTITUCIONAL</h2>
        
        <p>A Constitui√ß√£o Federal de 1988, em seu artigo 5¬∫, estabelece que todos s√£o iguais perante a lei, sem distin√ß√£o de qualquer natureza, garantindo-se aos brasileiros e aos estrangeiros residentes no Pa√≠s a inviolabilidade do direito √† vida, √† liberdade, √† igualdade, √† seguran√ßa e √† propriedade.</p>
        
        <p>O inciso XXXV do mesmo dispositivo constitucional assegura que "a lei n√£o excluir√° da aprecia√ß√£o do Poder Judici√°rio les√£o ou amea√ßa a direito", consagrando o princ√≠pio da inafastabilidade da jurisdi√ß√£o, que fundamenta o direito de a√ß√£o ora exercido.</p>
        
        <p>O princ√≠pio da dignidade da pessoa humana, previsto no artigo 1¬∫, inciso III, da Carta Magna, constitui fundamento do Estado Democr√°tico de Direito e deve ser observado em todas as rela√ß√µes jur√≠dicas, p√∫blicas e privadas.</p>
        
        <p>O devido processo legal, consagrado no artigo 5¬∫, inciso LIV, da Constitui√ß√£o Federal, garante que ningu√©m ser√° privado da liberdade ou de seus bens sem o devido processo legal, assegurando-se o contradit√≥rio e a ampla defesa, com os meios e recursos a ela inerentes.</p>
        
        <p>A efetividade da presta√ß√£o jurisdicional, corol√°rio do direito fundamental de acesso √† justi√ßa, imp√µe ao Estado-Juiz o dever de entregar a tutela jurisdicional adequada, tempestiva e efetiva, conforme preconiza o artigo 5¬∫, inciso LXXVIII, da Constitui√ß√£o Federal.</p>
        """)
        
        # Se√ß√£o de an√°lise processual
        secoes_expansao.append("""
        <h2>DA AN√ÅLISE PROCESSUAL APROFUNDADA</h2>
        
        <p>O presente feito encontra-se em perfeita conson√¢ncia com os requisitos processuais estabelecidos pelo C√≥digo de Processo Civil, observando-se rigorosamente as condi√ß√µes da a√ß√£o e os pressupostos processuais.</p>
        
        <p>A legitimidade ativa da parte autora decorre da titularidade do direito material alegado, conforme se depreende da documenta√ß√£o anexa e da narrativa f√°tica apresentada.</p>
        
        <p>A legitimidade passiva da parte requerida resta evidenciada pela rela√ß√£o jur√≠dica estabelecida entre as partes e pela responsabilidade legal pelos fatos narrados na inicial.</p>
        
        <p>O interesse de agir manifesta-se pela necessidade de tutela jurisdicional para a prote√ß√£o do direito alegado, bem como pela adequa√ß√£o da via processual escolhida para a solu√ß√£o do conflito.</p>
        
        <p>A possibilidade jur√≠dica do pedido √© evidente, uma vez que o ordenamento jur√≠dico n√£o veda a pretens√£o deduzida, sendo esta, ao contr√°rio, expressamente amparada pela legisla√ß√£o aplic√°vel.</p>
        
        <p>A compet√™ncia deste Ju√≠zo est√° adequadamente fixada, observando-se os crit√©rios estabelecidos pela Constitui√ß√£o Federal e pela legisla√ß√£o processual, n√£o havendo qualquer √≥bice ao regular processamento da demanda.</p>
        """)
        
        # Se√ß√£o de direito comparado
        secoes_expansao.append("""
        <h2>DO DIREITO COMPARADO E TEND√äNCIAS JURISPRUDENCIAIS</h2>
        
        <p>A experi√™ncia jur√≠dica de outros pa√≠ses demonstra a universalidade dos princ√≠pios que fundamentam a presente a√ß√£o, evidenciando a converg√™ncia dos sistemas jur√≠dicos na prote√ß√£o dos direitos fundamentais.</p>
        
        <p>O direito comparado oferece valiosos subs√≠dios para a interpreta√ß√£o e aplica√ß√£o das normas nacionais, especialmente em mat√©rias relacionadas aos direitos humanos e √† prote√ß√£o da dignidade da pessoa humana.</p>
        
        <p>A jurisprud√™ncia dos tribunais superiores tem evolu√≠do no sentido de reconhecer a aplicabilidade dos princ√≠pios constitucionais √†s rela√ß√µes jur√≠dicas, privilegiando a interpreta√ß√£o sistem√°tica e teleol√≥gica das normas.</p>
        
        <p>Os precedentes judiciais constituem importante fonte do direito, orientando a aplica√ß√£o uniforme das normas jur√≠dicas e conferindo seguran√ßa jur√≠dica √†s rela√ß√µes sociais.</p>
        
        <p>A doutrina especializada tem contribu√≠do significativamente para o desenvolvimento da mat√©ria, oferecendo subs√≠dios te√≥ricos para a adequada compreens√£o e aplica√ß√£o dos institutos jur√≠dicos envolvidos.</p>
        
        <p>A evolu√ß√£o legislativa na mat√©ria demonstra a preocupa√ß√£o do legislador em aperfei√ßoar os instrumentos de prote√ß√£o dos direitos, adaptando-os √†s necessidades sociais contempor√¢neas.</p>
        """)
        
        # Se√ß√£o de aspectos socioecon√¥micos
        secoes_expansao.append("""
        <h2>DOS ASPECTOS SOCIOECON√îMICOS E IMPACTOS SOCIAIS</h2>
        
        <p>A quest√£o apresentada transcende os interesses individuais das partes, inserindo-se em um contexto mais amplo de prote√ß√£o dos direitos fundamentais e de promo√ß√£o da justi√ßa social.</p>
        
        <p>A tutela jurisdicional adequada contribui para a efetiva√ß√£o dos direitos constitucionalmente garantidos, promovendo a inclus√£o social e a redu√ß√£o das desigualdades.</p>
        
        <p>O reconhecimento judicial da pretens√£o deduzida representa importante precedente para casos similares, contribuindo para a uniformiza√ß√£o da jurisprud√™ncia e para a seguran√ßa jur√≠dica.</p>
        
        <p>A fun√ß√£o social do processo judicial manifesta-se na sua capacidade de promover a pacifica√ß√£o social e a realiza√ß√£o da justi√ßa, valores fundamentais do Estado Democr√°tico de Direito.</p>
        
        <p>A efetividade da presta√ß√£o jurisdicional fortalece a confian√ßa da sociedade nas institui√ß√µes democr√°ticas, contribuindo para a consolida√ß√£o do Estado de Direito.</p>
        """)
        
        # Inserir se√ß√µes antes do fechamento
        posicao_insercao = documento.find('<h2>TERMOS EM QUE</h2>')
        if posicao_insercao == -1:
            posicao_insercao = documento.find('</body>')
        
        if posicao_insercao > 0:
            documento = documento[:posicao_insercao] + '\n'.join(secoes_expansao) + '\n' + documento[posicao_insercao:]
        else:
            documento += '\n'.join(secoes_expansao)
        
        return documento
    
    def _contar_dados_reais(self, dados: Dict[str, Any]) -> int:
        """Conta quantos dados reais foram utilizados."""
        
        dados_reais = 0
        
        # Verificar dados do autor
        if dados['autor']['nome'] and not dados['autor']['nome'].startswith('['):
            dados_reais += 1
        if dados['autor']['qualificacao'] and not dados['autor']['qualificacao'].startswith('['):
            dados_reais += 1
            
        # Verificar dados do r√©u
        if dados['reu']['nome'] and not dados['reu']['nome'].startswith('['):
            dados_reais += 1
        if dados['reu']['qualificacao'] and not dados['reu']['qualificacao'].startswith('['):
            dados_reais += 1
            
        # Verificar outros dados
        if dados['fatos'] and not dados['fatos'].startswith('['):
            dados_reais += 1
        if dados['pedidos'] and not dados['pedidos'].startswith('['):
            dados_reais += 1
            
        return dados_reais
    
    def _gerar_documento_fallback_extenso(self, dados_estruturados: Dict[str, Any], pesquisa_juridica: Dict[str, Any]) -> Dict[str, Any]:
        """Gera documento fallback extenso quando h√° erro."""
        
        documento_basico = self._get_template_default()
        
        # Substitui√ß√µes b√°sicas
        documento_basico = documento_basico.replace('{NOME_AUTOR}', '[NOME DO AUTOR A SER PREENCHIDO]')
        documento_basico = documento_basico.replace('{NOME_REU}', '[NOME DO R√âU A SER PREENCHIDO]')
        documento_basico = documento_basico.replace('{TIPO_ACAO}', 'A√ß√£o C√≠vel')
        documento_basico = documento_basico.replace('{DATA_ATUAL}', datetime.now().strftime('%d de %B de %Y'))
        
        # Expandir para 30K
        if len(documento_basico) < self.tamanho_minimo:
            documento_basico = self._expandir_documento_para_30k(documento_basico, {})
        
        return {
            "status": "fallback",
            "documento_html": documento_basico,
            "estatisticas": {
                "tamanho_caracteres": len(documento_basico),
                "area_direito": "geral",
                "dados_reais_utilizados": 0,
                "pesquisas_integradas": 0
            },
            "timestamp": datetime.now().isoformat()
        }
    
    def _get_template_trabalhista(self) -> str:
        """Template especializado para a√ß√µes trabalhistas."""
        
        return """
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Peti√ß√£o Inicial Trabalhista</title>
    <style>
        body {
            font-family: 'Times New Roman', serif;
            line-height: 1.8;
            margin: 40px;
            color: #000;
            background-color: #fff;
            font-size: 12pt;
        }
        
        h1 {
            text-align: center;
            font-size: 22px;
            font-weight: bold;
            margin: 30px 0;
            text-transform: uppercase;
        }
        
        h2 {
            font-size: 16px;
            font-weight: bold;
            margin: 30px 0 20px 0;
            text-transform: uppercase;
            border-bottom: 1px solid #000;
            padding-bottom: 5px;
        }
        
        h3 {
            font-size: 14px;
            font-weight: bold;
            margin: 25px 0 15px 0;
            text-transform: uppercase;
        }
        
        p {
            text-align: justify;
            margin-bottom: 15px;
            text-indent: 2em;
            font-size: 12pt;
            line-height: 1.8;
        }
        
        .enderecamento {
            text-align: right;
            margin-bottom: 40px;
            font-style: italic;
        }
        
        .assinatura {
            margin-top: 60px;
            text-align: center;
        }
        
        strong { font-weight: bold; }
        
        @media print {
            body { margin: 2cm; }
        }
    </style>
</head>
<body>
    <div class="enderecamento">
        <p>Excelent√≠ssimo(a) Senhor(a) Doutor(a) Juiz(a) do Trabalho<br>
        [VARA DO TRABALHO A SER ESPECIFICADA]<br>
        [COMARCA A SER ESPECIFICADA]</p>
    </div>

    <h1>{TIPO_ACAO}</h1>

    <h2>I - DAS PARTES</h2>
    
    <h3>DO REQUERENTE</h3>
    <p><strong>{NOME_AUTOR}</strong>, {QUALIFICACAO_AUTOR}, portador(a) do CPF n¬∫ {CPF_AUTOR}, residente e domiciliado(a) na {ENDERECO_AUTOR}, por seu advogado que esta subscreve, vem respeitosamente √† presen√ßa de Vossa Excel√™ncia propor a presente</p>

    <h3>DO REQUERIDO</h3>
    <p><strong>{NOME_REU}</strong>, {QUALIFICACAO_REU}, inscrita no CNPJ sob o n¬∫ {CNPJ_REU}, com sede na {ENDERECO_REU}, pelos motivos de fato e de direito a seguir expostos:</p>

    <h2>II - DOS FATOS</h2>
    
    <p>A presente a√ß√£o trabalhista tem por fundamento os seguintes fatos, que ser√£o devidamente comprovados no curso do processo:</p>
    
    {FATOS_DETALHADOS}
    
    <p>Os fatos narrados caracterizam viola√ß√£o aos direitos trabalhistas fundamentais, ensejando a repara√ß√£o integral dos danos causados ao trabalhador.</p>
    
    <p>A situa√ß√£o descrita encontra amparo na legisla√ß√£o trabalhista e na jurisprud√™ncia consolidada dos tribunais superiores, conforme ser√° demonstrado na fundamenta√ß√£o jur√≠dica a seguir.</p>

    <h2>III - DO DIREITO</h2>
    
    <h3>DA LEGISLA√á√ÉO TRABALHISTA APLIC√ÅVEL</h3>
    
    {LEGISLACAO_APLICAVEL}
    
    <p>A Consolida√ß√£o das Leis do Trabalho estabelece de forma clara os direitos e deveres nas rela√ß√µes de trabalho, garantindo a prote√ß√£o do trabalhador como parte hipossuficiente da rela√ß√£o jur√≠dica.</p>
    
    <p>Os princ√≠pios fundamentais do Direito do Trabalho, especialmente o princ√≠pio da prote√ß√£o, da primazia da realidade e da irrenunciabilidade de direitos, orientam a interpreta√ß√£o e aplica√ß√£o das normas trabalhistas.</p>

    <h3>DA JURISPRUD√äNCIA DOS TRIBUNAIS SUPERIORES</h3>
    
    {JURISPRUDENCIA_APLICAVEL}
    
    <p>O Tribunal Superior do Trabalho tem consolidado entendimento no sentido de garantir a efetiva prote√ß√£o dos direitos trabalhistas, especialmente em casos que envolvem viola√ß√£o aos direitos fundamentais do trabalhador.</p>

    <h3>DA DOUTRINA ESPECIALIZADA</h3>
    
    {DOUTRINA_APLICAVEL}
    
    <p>A doutrina trabalhista especializada sustenta a necessidade de interpreta√ß√£o das normas trabalhistas de forma a garantir a m√°xima efetividade dos direitos sociais constitucionalmente garantidos.</p>

    <h2>IV - DOS PEDIDOS</h2>
    
    {PEDIDOS_DETALHADOS}

    <h2>V - DO VALOR DA CAUSA</h2>
    
    <p>Para efeitos fiscais e de al√ßada, atribui-se √† presente causa o valor de <strong>{VALOR_CAUSA}</strong>.</p>

    <h2>VI - DAS PROVAS</h2>
    
    <p>A prova dos fatos alegados ser√° produzida atrav√©s de:</p>
    
    <p><strong>a)</strong> Documentos anexos: {DOCUMENTOS_ANEXOS}</p>
    
    <p><strong>b)</strong> Prova testemunhal, requerendo-se desde j√° a intima√ß√£o das testemunhas que ser√£o arroladas oportunamente;</p>
    
    <p><strong>c)</strong> Prova pericial, se necess√°ria para a demonstra√ß√£o dos fatos alegados;</p>
    
    <p><strong>d)</strong> Todos os demais meios de prova admitidos em direito.</p>

    <h2>VII - DA COMPET√äNCIA</h2>
    
    <p>A compet√™ncia deste Ju√≠zo est√° adequadamente fixada, nos termos do artigo 651 da Consolida√ß√£o das Leis do Trabalho, uma vez que a presta√ß√£o de servi√ßos ocorreu nesta localidade.</p>

    <h2>TERMOS EM QUE</h2>
    
    <p>Pede deferimento.</p>
    
    <p class="assinatura">
        [LOCAL], {DATA_ATUAL}<br><br>
        _________________________________<br>
        [NOME DO ADVOGADO]<br>
        OAB/[UF] n¬∫ [N√öMERO]
    </p>

</body>
</html>
        """
    
    def _get_template_civil(self) -> str:
        """Template para a√ß√µes c√≠veis."""
        
        return """
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Peti√ß√£o Inicial C√≠vel</title>
    <style>
        body {
            font-family: 'Times New Roman', serif;
            line-height: 1.8;
            margin: 40px;
            color: #000;
            background-color: #fff;
            font-size: 12pt;
        }
        
        h1 {
            text-align: center;
            font-size: 22px;
            font-weight: bold;
            margin: 30px 0;
            text-transform: uppercase;
        }
        
        h2 {
            font-size: 16px;
            font-weight: bold;
            margin: 30px 0 20px 0;
            text-transform: uppercase;
            border-bottom: 1px solid #000;
            padding-bottom: 5px;
        }
        
        p {
            text-align: justify;
            margin-bottom: 15px;
            text-indent: 2em;
            font-size: 12pt;
            line-height: 1.8;
        }
        
        .enderecamento {
            text-align: right;
            margin-bottom: 40px;
            font-style: italic;
        }
        
        .assinatura {
            margin-top: 60px;
            text-align: center;
        }
        
        strong { font-weight: bold; }
        
        @media print {
            body { margin: 2cm; }
        }
    </style>
</head>
<body>
    <div class="enderecamento">
        <p>Excelent√≠ssimo(a) Senhor(a) Doutor(a) Juiz(a) de Direito<br>
        [VARA C√çVEL A SER ESPECIFICADA]<br>
        [COMARCA A SER ESPECIFICADA]</p>
    </div>

    <h1>{TIPO_ACAO}</h1>

    <h2>I - QUALIFICA√á√ÉO DAS PARTES</h2>
    
    <p><strong>REQUERENTE:</strong> {NOME_AUTOR}, {QUALIFICACAO_AUTOR}, portador(a) do CPF n¬∫ {CPF_AUTOR}, residente e domiciliado(a) na {ENDERECO_AUTOR};</p>

    <p><strong>REQUERIDO:</strong> {NOME_REU}, {QUALIFICACAO_REU}, inscrita no CNPJ sob o n¬∫ {CNPJ_REU}, com sede na {ENDERECO_REU};</p>

    <h2>II - DOS FATOS</h2>
    
    {FATOS_DETALHADOS}

    <h2>III - DO DIREITO</h2>
    
    {LEGISLACAO_APLICAVEL}
    
    {JURISPRUDENCIA_APLICAVEL}
    
    {DOUTRINA_APLICAVEL}

    <h2>IV - DOS PEDIDOS</h2>
    
    {PEDIDOS_DETALHADOS}

    <h2>V - DO VALOR DA CAUSA</h2>
    
    <p>Atribui-se √† presente causa o valor de <strong>{VALOR_CAUSA}</strong>.</p>

    <h2>TERMOS EM QUE</h2>
    
    <p>Pede deferimento.</p>
    
    <p class="assinatura">
        [LOCAL], {DATA_ATUAL}<br><br>
        _________________________________<br>
        [NOME DO ADVOGADO]<br>
        OAB/[UF] n¬∫ [N√öMERO]
    </p>

</body>
</html>
        """
    
    def _get_template_consumidor(self) -> str:
        """Template para a√ß√µes de consumidor."""
        
        return self._get_template_civil()  # Usar template civil como base
    
    def _get_template_default(self) -> str:
        """Template padr√£o."""
        
        return self._get_template_civil()  # Usar template civil como padr√£o

